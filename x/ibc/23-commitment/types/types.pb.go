// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.1
// source: x/ibc/23-commitment/types/types.proto

package types

import (
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	ics23 "third_party/proto/confio/ics23"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// KeyEncoding defines the encoding format of a key's bytes.
type KeyEncoding int32

const (
	// URL encoding
	KeyEncoding_KEY_ENCODING_URL_UNSPECIFIED KeyEncoding = 0
	// Hex encoding
	KeyEncoding_KEY_ENCODING_HEX KeyEncoding = 1
)

// Enum value maps for KeyEncoding.
var (
	KeyEncoding_name = map[int32]string{
		0: "KEY_ENCODING_URL_UNSPECIFIED",
		1: "KEY_ENCODING_HEX",
	}
	KeyEncoding_value = map[string]int32{
		"KEY_ENCODING_URL_UNSPECIFIED": 0,
		"KEY_ENCODING_HEX":             1,
	}
)

func (x KeyEncoding) Enum() *KeyEncoding {
	p := new(KeyEncoding)
	*p = x
	return p
}

func (x KeyEncoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyEncoding) Descriptor() protoreflect.EnumDescriptor {
	return file_x_ibc_23_commitment_types_types_proto_enumTypes[0].Descriptor()
}

func (KeyEncoding) Type() protoreflect.EnumType {
	return &file_x_ibc_23_commitment_types_types_proto_enumTypes[0]
}

func (x KeyEncoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyEncoding.Descriptor instead.
func (KeyEncoding) EnumDescriptor() ([]byte, []int) {
	return file_x_ibc_23_commitment_types_types_proto_rawDescGZIP(), []int{0}
}

// MerkleRoot defines a merkle root hash.
// In the Cosmos SDK, the AppHash of a block header becomes the root.
type MerkleRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *MerkleRoot) Reset() {
	*x = MerkleRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerkleRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleRoot) ProtoMessage() {}

func (x *MerkleRoot) ProtoReflect() protoreflect.Message {
	mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleRoot.ProtoReflect.Descriptor instead.
func (*MerkleRoot) Descriptor() ([]byte, []int) {
	return file_x_ibc_23_commitment_types_types_proto_rawDescGZIP(), []int{0}
}

func (x *MerkleRoot) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// MerklePrefix is merkle path prefixed to the key.
// The constructed key from the Path and the key will be append(Path.KeyPath, append(Path.KeyPrefix, key...))
type MerklePrefix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyPrefix []byte `protobuf:"bytes,1,opt,name=key_prefix,json=keyPrefix,proto3" json:"key_prefix,omitempty"`
}

func (x *MerklePrefix) Reset() {
	*x = MerklePrefix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerklePrefix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerklePrefix) ProtoMessage() {}

func (x *MerklePrefix) ProtoReflect() protoreflect.Message {
	mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerklePrefix.ProtoReflect.Descriptor instead.
func (*MerklePrefix) Descriptor() ([]byte, []int) {
	return file_x_ibc_23_commitment_types_types_proto_rawDescGZIP(), []int{1}
}

func (x *MerklePrefix) GetKeyPrefix() []byte {
	if x != nil {
		return x.KeyPrefix
	}
	return nil
}

// MerklePath is the path used to verify commitment proofs, which can be an arbitrary
// structured object (defined by a commitment type).
type MerklePath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyPath *KeyPath `protobuf:"bytes,1,opt,name=key_path,json=keyPath,proto3" json:"key_path,omitempty"`
}

func (x *MerklePath) Reset() {
	*x = MerklePath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerklePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerklePath) ProtoMessage() {}

func (x *MerklePath) ProtoReflect() protoreflect.Message {
	mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerklePath.ProtoReflect.Descriptor instead.
func (*MerklePath) Descriptor() ([]byte, []int) {
	return file_x_ibc_23_commitment_types_types_proto_rawDescGZIP(), []int{2}
}

func (x *MerklePath) GetKeyPath() *KeyPath {
	if x != nil {
		return x.KeyPath
	}
	return nil
}

// MerkleProof is a wrapper type that contains a merkle proof.
// It demonstrates membership or non-membership for an element or set of elements,
// verifiable in conjunction with a known commitment root. Proofs should be
// succinct.
type MerkleProof struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Proof []*ics23.CommitmentProof `protobuf:"bytes,1,rep,name=proof,proto3" json:"proof,omitempty"`
}

func (x *MerkleProof) Reset() {
	*x = MerkleProof{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerkleProof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleProof) ProtoMessage() {}

func (x *MerkleProof) ProtoReflect() protoreflect.Message {
	mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleProof.ProtoReflect.Descriptor instead.
func (*MerkleProof) Descriptor() ([]byte, []int) {
	return file_x_ibc_23_commitment_types_types_proto_rawDescGZIP(), []int{3}
}

func (x *MerkleProof) GetProof() []*ics23.CommitmentProof {
	if x != nil {
		return x.Proof
	}
	return nil
}

// KeyPath defines a slice of keys
type KeyPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys []*Key `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *KeyPath) Reset() {
	*x = KeyPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPath) ProtoMessage() {}

func (x *KeyPath) ProtoReflect() protoreflect.Message {
	mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPath.ProtoReflect.Descriptor instead.
func (*KeyPath) Descriptor() ([]byte, []int) {
	return file_x_ibc_23_commitment_types_types_proto_rawDescGZIP(), []int{4}
}

func (x *KeyPath) GetKeys() []*Key {
	if x != nil {
		return x.Keys
	}
	return nil
}

// Key defines a proof Key
type Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []byte      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Enc  KeyEncoding `protobuf:"varint,2,opt,name=enc,proto3,enum=cosmos_sdk.x.ibc.commitment.v1.KeyEncoding" json:"enc,omitempty"`
}

func (x *Key) Reset() {
	*x = Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Key) ProtoMessage() {}

func (x *Key) ProtoReflect() protoreflect.Message {
	mi := &file_x_ibc_23_commitment_types_types_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Key.ProtoReflect.Descriptor instead.
func (*Key) Descriptor() ([]byte, []int) {
	return file_x_ibc_23_commitment_types_types_proto_rawDescGZIP(), []int{5}
}

func (x *Key) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Key) GetEnc() KeyEncoding {
	if x != nil {
		return x.Enc
	}
	return KeyEncoding_KEY_ENCODING_URL_UNSPECIFIED
}

var File_x_ibc_23_commitment_types_types_proto protoreflect.FileDescriptor

var file_x_ibc_23_commitment_types_types_proto_rawDesc = []byte{
	0x0a, 0x25, 0x78, 0x2f, 0x69, 0x62, 0x63, 0x2f, 0x32, 0x33, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f,
	0x73, 0x64, 0x6b, 0x2e, 0x78, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x26, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2a, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x6f, 0x2f, 0x69, 0x63, 0x73, 0x32, 0x33, 0x2f,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x26, 0x0a, 0x0a, 0x4d,
	0x65, 0x72, 0x6b, 0x6c, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x3a, 0x04, 0x88,
	0xa0, 0x1f, 0x00, 0x22, 0x44, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x34, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x15, 0xf2, 0xde, 0x1f, 0x11, 0x79, 0x61, 0x6d,
	0x6c, 0x3a, 0x22, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x52, 0x09,
	0x6b, 0x65, 0x79, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x22, 0x6f, 0x0a, 0x0a, 0x4d, 0x65, 0x72,
	0x6b, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x5b, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x73, 0x6d,
	0x6f, 0x73, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x78, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x61,
	0x74, 0x68, 0x42, 0x17, 0xc8, 0xde, 0x1f, 0x00, 0xf2, 0xde, 0x1f, 0x0f, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x6b, 0x65, 0x79, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x22, 0x52, 0x07, 0x6b, 0x65, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x3a, 0x04, 0x98, 0xa0, 0x1f, 0x00, 0x22, 0x41, 0x0a, 0x0b, 0x4d, 0x65,
	0x72, 0x6b, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x72, 0x6f,
	0x6f, 0x66, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x63, 0x73, 0x32, 0x33,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x01, 0x22, 0x4c, 0x0a,
	0x07, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f,
	0x73, 0x64, 0x6b, 0x2e, 0x78, 0x2e, 0x69, 0x62, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79,
	0x73, 0x3a, 0x08, 0x98, 0xa0, 0x1f, 0x00, 0x88, 0xa0, 0x1f, 0x00, 0x22, 0x71, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x42, 0x08, 0xe2, 0xde, 0x1f, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x46, 0x0a, 0x03, 0x65, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x73, 0x64, 0x6b, 0x2e, 0x78, 0x2e, 0x69, 0x62, 0x63,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4b,
	0x65, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x07, 0xe2, 0xde, 0x1f, 0x03,
	0x65, 0x6e, 0x63, 0x52, 0x03, 0x65, 0x6e, 0x63, 0x3a, 0x04, 0x88, 0xa0, 0x1f, 0x00, 0x2a, 0x61,
	0x0a, 0x0b, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a,
	0x1c, 0x4b, 0x45, 0x59, 0x5f, 0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x52,
	0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x1a,
	0x07, 0x8a, 0x9d, 0x20, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x1d, 0x0a, 0x10, 0x4b, 0x45, 0x59, 0x5f,
	0x45, 0x4e, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x48, 0x45, 0x58, 0x10, 0x01, 0x1a, 0x07,
	0x8a, 0x9d, 0x20, 0x03, 0x48, 0x45, 0x58, 0x1a, 0x08, 0xa8, 0xa4, 0x1e, 0x00, 0x88, 0xa3, 0x1e,
	0x00, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2d, 0x73, 0x64,
	0x6b, 0x2f, 0x78, 0x2f, 0x69, 0x62, 0x63, 0x2f, 0x32, 0x33, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_x_ibc_23_commitment_types_types_proto_rawDescOnce sync.Once
	file_x_ibc_23_commitment_types_types_proto_rawDescData = file_x_ibc_23_commitment_types_types_proto_rawDesc
)

func file_x_ibc_23_commitment_types_types_proto_rawDescGZIP() []byte {
	file_x_ibc_23_commitment_types_types_proto_rawDescOnce.Do(func() {
		file_x_ibc_23_commitment_types_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_x_ibc_23_commitment_types_types_proto_rawDescData)
	})
	return file_x_ibc_23_commitment_types_types_proto_rawDescData
}

var file_x_ibc_23_commitment_types_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_x_ibc_23_commitment_types_types_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_x_ibc_23_commitment_types_types_proto_goTypes = []interface{}{
	(KeyEncoding)(0),              // 0: cosmos_sdk.x.ibc.commitment.v1.KeyEncoding
	(*MerkleRoot)(nil),            // 1: cosmos_sdk.x.ibc.commitment.v1.MerkleRoot
	(*MerklePrefix)(nil),          // 2: cosmos_sdk.x.ibc.commitment.v1.MerklePrefix
	(*MerklePath)(nil),            // 3: cosmos_sdk.x.ibc.commitment.v1.MerklePath
	(*MerkleProof)(nil),           // 4: cosmos_sdk.x.ibc.commitment.v1.MerkleProof
	(*KeyPath)(nil),               // 5: cosmos_sdk.x.ibc.commitment.v1.KeyPath
	(*Key)(nil),                   // 6: cosmos_sdk.x.ibc.commitment.v1.Key
	(*ics23.CommitmentProof)(nil), // 7: ics23.CommitmentProof
}
var file_x_ibc_23_commitment_types_types_proto_depIdxs = []int32{
	5, // 0: cosmos_sdk.x.ibc.commitment.v1.MerklePath.key_path:type_name -> cosmos_sdk.x.ibc.commitment.v1.KeyPath
	7, // 1: cosmos_sdk.x.ibc.commitment.v1.MerkleProof.proof:type_name -> ics23.CommitmentProof
	6, // 2: cosmos_sdk.x.ibc.commitment.v1.KeyPath.keys:type_name -> cosmos_sdk.x.ibc.commitment.v1.Key
	0, // 3: cosmos_sdk.x.ibc.commitment.v1.Key.enc:type_name -> cosmos_sdk.x.ibc.commitment.v1.KeyEncoding
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_x_ibc_23_commitment_types_types_proto_init() }
func file_x_ibc_23_commitment_types_types_proto_init() {
	if File_x_ibc_23_commitment_types_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_x_ibc_23_commitment_types_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerkleRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x_ibc_23_commitment_types_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerklePrefix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x_ibc_23_commitment_types_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerklePath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x_ibc_23_commitment_types_types_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerkleProof); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x_ibc_23_commitment_types_types_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_x_ibc_23_commitment_types_types_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_x_ibc_23_commitment_types_types_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_x_ibc_23_commitment_types_types_proto_goTypes,
		DependencyIndexes: file_x_ibc_23_commitment_types_types_proto_depIdxs,
		EnumInfos:         file_x_ibc_23_commitment_types_types_proto_enumTypes,
		MessageInfos:      file_x_ibc_23_commitment_types_types_proto_msgTypes,
	}.Build()
	File_x_ibc_23_commitment_types_types_proto = out.File
	file_x_ibc_23_commitment_types_types_proto_rawDesc = nil
	file_x_ibc_23_commitment_types_types_proto_goTypes = nil
	file_x_ibc_23_commitment_types_types_proto_depIdxs = nil
}
